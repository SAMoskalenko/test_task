# Generated by Django 3.0.2 on 2020-01-17 07:19

from django.db import migrations, models
import django.db.models.deletion
import event_app.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='EventBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('event_type', models.CharField(choices=[('ONE', 'Разовое мероприятие'), ('PER', 'Периодическое мероприятие')], default=event_app.models.TypeChoice['ONE'], max_length=10)),
                ('event_period', models.CharField(choices=[('DAY', 'Ежедневное'), ('MTH', 'Ежемесячное'), ('YER', 'Ежегодное')], default=event_app.models.PeriodChoice['DAY'], max_length=10)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Month',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Prices',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField()),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Tickets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Year',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.PositiveIntegerField()),
            ],
            options={
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.TimeField()),
                ('tickets_bought', models.PositiveIntegerField()),
                ('base', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.EventBase')),
                ('day', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.Day')),
                ('month', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.Month')),
                ('price', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.Prices')),
                ('tickets_total', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.Tickets')),
                ('town', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.Town')),
                ('year', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='event', to='event_app.Year')),
            ],
            options={
                'ordering': ('id',),
            },
        ),
    ]
